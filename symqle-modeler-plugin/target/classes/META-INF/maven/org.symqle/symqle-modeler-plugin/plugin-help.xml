<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.2 on 2014-04-29 -->

<plugin>
  <name>symqle-modeler-plugin Maven Plugin</name>
  <description></description>
  <groupId>org.symqle</groupId>
  <artifactId>symqle-modeler-plugin</artifactId>
  <version>0.1-SNAPSHOT</version>
  <goalPrefix>symqle-modeler-plugin</goalPrefix>
  <mojos>
    <mojo>
      <goal>generate</goal>
      <description>Goal which generates Symqle model</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>generate-sources</phase>
      <implementation>org.symqle.modeler.GenerateMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>dataAccessPackage</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Java package of generated Selectors and Crud helpers.</description>
        </parameter>
        <parameter>
          <name>dataPackage</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Java package of generated primary key and data transfer object classes.</description>
        </parameter>
        <parameter>
          <name>excludeColumnNamePattern</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Regexp pattern to exclude columns by name from model. Example: &apos;.*_create_ts&apos;. Case-insensitive.</description>
        </parameter>
        <parameter>
          <name>excludeTableNamePattern</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Regexp pattern to exclude tables by name from model. Example: &apos;SYS.*&apos;. Case-insensitive.</description>
        </parameter>
        <parameter>
          <name>excludeTableTypePattern</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Regexp pattern to exclude table types from model. Example: &apos;ALIAS|SYNONYM&apos;. Case-insensitive.</description>
        </parameter>
        <parameter>
          <name>includeColumnNamePattern</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Regexp pattern to include columns by name from model. Example: &apos;.*&apos;. Case-insensitive.</description>
        </parameter>
        <parameter>
          <name>includeTableNamePattern</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Regexp pattern to include tables by name to model. Example: &apos;.*&apos;. Case-insensitive.</description>
        </parameter>
        <parameter>
          <name>includeTableTypePattern</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Regexp pattern to include table types from model. Example: &apos;TABLE|VIEW&apos;. Case-insensitive. You may use excludeTableType, includeTableType or both.</description>
        </parameter>
        <parameter>
          <name>jdbcDriver</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Jdbc driver fully qualified class name.</description>
        </parameter>
        <parameter>
          <name>jdbcPassword</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Database password.</description>
        </parameter>
        <parameter>
          <name>jdbcUrl</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Jdbc URL.</description>
        </parameter>
        <parameter>
          <name>jdbcUser</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Database user name.</description>
        </parameter>
        <parameter>
          <name>naturalKeys</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Do not generate primary key classes; use java.lang and java.sql classes for keys. Default: false.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The directory where generated sources are put. This directory is included to project sources.</description>
        </parameter>
        <parameter>
          <name>samplesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The directory where sample sources are put. This directory is not included to project sources. Set it equal to outputDirectory to include samples to compilation.</description>
        </parameter>
        <parameter>
          <name>symqleModelPackage</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Java package of generated table classes.</description>
        </parameter>
      </parameters>
      <configuration>
        <dataAccessPackage implementation="java.lang.String">${symqle.dataAccessPackage}</dataAccessPackage>
        <dataPackage implementation="java.lang.String">${symqle.dataPackage}</dataPackage>
        <excludeColumnNamePattern implementation="java.lang.String">${symqle.excludeColumnNamePattern}</excludeColumnNamePattern>
        <excludeTableNamePattern implementation="java.lang.String">${symqle.excludeTableNamePattern}</excludeTableNamePattern>
        <excludeTableTypePattern implementation="java.lang.String">${symqle.excludeTableTypePattern}</excludeTableTypePattern>
        <includeColumnNamePattern implementation="java.lang.String">${symqle.includeColumnNamePattern}</includeColumnNamePattern>
        <includeTableNamePattern implementation="java.lang.String">${symqle.includeTableNamePattern}</includeTableNamePattern>
        <includeTableTypePattern implementation="java.lang.String">${symqle.includeTableTypePattern}</includeTableTypePattern>
        <jdbcDriver implementation="java.lang.String">${symqle.jdbcDriver}</jdbcDriver>
        <jdbcPassword implementation="java.lang.String">${symqle.jdbcPassword}</jdbcPassword>
        <jdbcUrl implementation="java.lang.String">${symqle.jdbcUrl}</jdbcUrl>
        <jdbcUser implementation="java.lang.String">${symqle.jdbcUser}</jdbcUser>
        <naturalKeys implementation="boolean">${symqle.naturalKeys}</naturalKeys>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}/generated-sources/main/">${symqle.outputDirectory}</outputDirectory>
        <samplesDirectory implementation="java.io.File" default-value="${project.build.directory}/generated-samples/">${symqle.samplesDirectory}</samplesDirectory>
        <symqleModelPackage implementation="java.lang.String">${symqle.symqleModelPackage}</symqleModelPackage>
      </configuration>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on symqle-modeler-plugin.
Call mvn symqle-modeler-plugin:help -Ddetail=true -Dgoal=&lt;goal-name&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.symqle.modeler.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If true, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
  </mojos>
</plugin>